#include "purrr/vulkan/format.hpp"
#include <stdexcept>

namespace purrr::vulkan {

VkFormat vkFormat(Format format) {
  switch (format) {
  case Format::Undefined: return VK_FORMAT_UNDEFINED;
  case Format::RG4UnormPack8: return VK_FORMAT_R4G4_UNORM_PACK8;
  case Format::RGBA4UnormPack16: return VK_FORMAT_R4G4B4A4_UNORM_PACK16;
  case Format::BGRA4UnormPack16: return VK_FORMAT_B4G4R4A4_UNORM_PACK16;
  case Format::R5G6B5UnormPack16: return VK_FORMAT_R5G6B5_UNORM_PACK16;
  case Format::B5G6R5UnormPack16: return VK_FORMAT_B5G6R5_UNORM_PACK16;
  case Format::RGB5A1UnormPack16: return VK_FORMAT_R5G5B5A1_UNORM_PACK16;
  case Format::BGR5A1UnormPack16: return VK_FORMAT_B5G5R5A1_UNORM_PACK16;
  case Format::A1RGB5UnormPack16: return VK_FORMAT_A1R5G5B5_UNORM_PACK16;
  case Format::R8Unorm: return VK_FORMAT_R8_UNORM;
  case Format::R8Snorm: return VK_FORMAT_R8_SNORM;
  case Format::R8Uscaled: return VK_FORMAT_R8_USCALED;
  case Format::R8Sscaled: return VK_FORMAT_R8_SSCALED;
  case Format::R8Uint: return VK_FORMAT_R8_UINT;
  case Format::R8Sint: return VK_FORMAT_R8_SINT;
  case Format::R8Srgb: return VK_FORMAT_R8_SRGB;
  case Format::RG8Unorm: return VK_FORMAT_R8G8_UNORM;
  case Format::RG8Snorm: return VK_FORMAT_R8G8_SNORM;
  case Format::RG8Uscaled: return VK_FORMAT_R8G8_USCALED;
  case Format::RG8Sscaled: return VK_FORMAT_R8G8_SSCALED;
  case Format::RG8Uint: return VK_FORMAT_R8G8_UINT;
  case Format::RG8Sint: return VK_FORMAT_R8G8_SINT;
  case Format::RG8Srgb: return VK_FORMAT_R8G8_SRGB;
  case Format::RGB8Unorm: return VK_FORMAT_R8G8B8_UNORM;
  case Format::RGB8Snorm: return VK_FORMAT_R8G8B8_SNORM;
  case Format::RGB8Uscaled: return VK_FORMAT_R8G8B8_USCALED;
  case Format::RGB8Sscaled: return VK_FORMAT_R8G8B8_SSCALED;
  case Format::RGB8Uint: return VK_FORMAT_R8G8B8_UINT;
  case Format::RGB8Sint: return VK_FORMAT_R8G8B8_SINT;
  case Format::RGB8Srgb: return VK_FORMAT_R8G8B8_SRGB;
  case Format::BGR8Unorm: return VK_FORMAT_B8G8R8_UNORM;
  case Format::BGR8Snorm: return VK_FORMAT_B8G8R8_SNORM;
  case Format::BGR8Uscaled: return VK_FORMAT_B8G8R8_USCALED;
  case Format::BGR8Sscaled: return VK_FORMAT_B8G8R8_SSCALED;
  case Format::BGR8Uint: return VK_FORMAT_B8G8R8_UINT;
  case Format::BGR8Sint: return VK_FORMAT_B8G8R8_SINT;
  case Format::BGR8Srgb: return VK_FORMAT_B8G8R8_SRGB;
  case Format::RGBA8Unorm: return VK_FORMAT_R8G8B8A8_UNORM;
  case Format::RGBA8Snorm: return VK_FORMAT_R8G8B8A8_SNORM;
  case Format::RGBA8Uscaled: return VK_FORMAT_R8G8B8A8_USCALED;
  case Format::RGBA8Sscaled: return VK_FORMAT_R8G8B8A8_SSCALED;
  case Format::RGBA8Uint: return VK_FORMAT_R8G8B8A8_UINT;
  case Format::RGBA8Sint: return VK_FORMAT_R8G8B8A8_SINT;
  case Format::RGBA8Srgb: return VK_FORMAT_R8G8B8A8_SRGB;
  case Format::BGRA8Unorm: return VK_FORMAT_B8G8R8A8_UNORM;
  case Format::BGRA8Snorm: return VK_FORMAT_B8G8R8A8_SNORM;
  case Format::BGRA8Uscaled: return VK_FORMAT_B8G8R8A8_USCALED;
  case Format::BGRA8Sscaled: return VK_FORMAT_B8G8R8A8_SSCALED;
  case Format::BGRA8Uint: return VK_FORMAT_B8G8R8A8_UINT;
  case Format::BGRA8Sint: return VK_FORMAT_B8G8R8A8_SINT;
  case Format::BGRA8Srgb: return VK_FORMAT_B8G8R8A8_SRGB;
  case Format::ABGR8UnormPack32: return VK_FORMAT_A8B8G8R8_UNORM_PACK32;
  case Format::ABGR8SnormPack32: return VK_FORMAT_A8B8G8R8_SNORM_PACK32;
  case Format::ABGR8UscaledPack32: return VK_FORMAT_A8B8G8R8_USCALED_PACK32;
  case Format::ABGR8SscaledPack32: return VK_FORMAT_A8B8G8R8_SSCALED_PACK32;
  case Format::ABGR8UintPack32: return VK_FORMAT_A8B8G8R8_UINT_PACK32;
  case Format::ABGR8SintPack32: return VK_FORMAT_A8B8G8R8_SINT_PACK32;
  case Format::ABGR8SrgbPack32: return VK_FORMAT_A8B8G8R8_SRGB_PACK32;
  case Format::A2RGB10UnormPack32: return VK_FORMAT_A2R10G10B10_UNORM_PACK32;
  case Format::A2RGB10SnormPack32: return VK_FORMAT_A2R10G10B10_SNORM_PACK32;
  case Format::A2RGB10UscaledPack32: return VK_FORMAT_A2R10G10B10_USCALED_PACK32;
  case Format::A2RGB10SscaledPack32: return VK_FORMAT_A2R10G10B10_SSCALED_PACK32;
  case Format::A2RGB10UintPack32: return VK_FORMAT_A2R10G10B10_UINT_PACK32;
  case Format::A2RGB10SintPack32: return VK_FORMAT_A2R10G10B10_SINT_PACK32;
  case Format::A2BGR10UnormPack32: return VK_FORMAT_A2B10G10R10_UNORM_PACK32;
  case Format::A2BGR10SnormPack32: return VK_FORMAT_A2B10G10R10_SNORM_PACK32;
  case Format::A2BGR10UscaledPack32: return VK_FORMAT_A2B10G10R10_USCALED_PACK32;
  case Format::A2BGR10SscaledPack32: return VK_FORMAT_A2B10G10R10_SSCALED_PACK32;
  case Format::A2BGR10UintPack32: return VK_FORMAT_A2B10G10R10_UINT_PACK32;
  case Format::A2BGR10SintPack32: return VK_FORMAT_A2B10G10R10_SINT_PACK32;
  case Format::R16Unorm: return VK_FORMAT_R16_UNORM;
  case Format::R16Snorm: return VK_FORMAT_R16_SNORM;
  case Format::R16Uscaled: return VK_FORMAT_R16_USCALED;
  case Format::R16Sscaled: return VK_FORMAT_R16_SSCALED;
  case Format::R16Uint: return VK_FORMAT_R16_UINT;
  case Format::R16Sint: return VK_FORMAT_R16_SINT;
  case Format::R16Sfloat: return VK_FORMAT_R16_SFLOAT;
  case Format::RG16Unorm: return VK_FORMAT_R16G16_UNORM;
  case Format::RG16Snorm: return VK_FORMAT_R16G16_SNORM;
  case Format::RG16Uscaled: return VK_FORMAT_R16G16_USCALED;
  case Format::RG16Sscaled: return VK_FORMAT_R16G16_SSCALED;
  case Format::RG16Uint: return VK_FORMAT_R16G16_UINT;
  case Format::RG16Sint: return VK_FORMAT_R16G16_SINT;
  case Format::RG16Sfloat: return VK_FORMAT_R16G16_SFLOAT;
  case Format::RGB16Unorm: return VK_FORMAT_R16G16B16_UNORM;
  case Format::RGB16Snorm: return VK_FORMAT_R16G16B16_SNORM;
  case Format::RGB16Uscaled: return VK_FORMAT_R16G16B16_USCALED;
  case Format::RGB16Sscaled: return VK_FORMAT_R16G16B16_SSCALED;
  case Format::RGB16Uint: return VK_FORMAT_R16G16B16_UINT;
  case Format::RGB16Sint: return VK_FORMAT_R16G16B16_SINT;
  case Format::RGB16Sfloat: return VK_FORMAT_R16G16B16_SFLOAT;
  case Format::RGBA16Unorm: return VK_FORMAT_R16G16B16A16_UNORM;
  case Format::RGBA16Snorm: return VK_FORMAT_R16G16B16A16_SNORM;
  case Format::RGBA16Uscaled: return VK_FORMAT_R16G16B16A16_USCALED;
  case Format::RGBA16Sscaled: return VK_FORMAT_R16G16B16A16_SSCALED;
  case Format::RGBA16Uint: return VK_FORMAT_R16G16B16A16_UINT;
  case Format::RGBA16Sint: return VK_FORMAT_R16G16B16A16_SINT;
  case Format::RGBA16Sfloat: return VK_FORMAT_R16G16B16A16_SFLOAT;
  case Format::R32Uint: return VK_FORMAT_R32_UINT;
  case Format::R32Sint: return VK_FORMAT_R32_SINT;
  case Format::R32Sfloat: return VK_FORMAT_R32_SFLOAT;
  case Format::RG32Uint: return VK_FORMAT_R32G32_UINT;
  case Format::RG32Sint: return VK_FORMAT_R32G32_SINT;
  case Format::RG32Sfloat: return VK_FORMAT_R32G32_SFLOAT;
  case Format::RGB32Uint: return VK_FORMAT_R32G32B32_UINT;
  case Format::RGB32Sint: return VK_FORMAT_R32G32B32_SINT;
  case Format::RGB32Sfloat: return VK_FORMAT_R32G32B32_SFLOAT;
  case Format::RGBA32Uint: return VK_FORMAT_R32G32B32A32_UINT;
  case Format::RGBA32Sint: return VK_FORMAT_R32G32B32A32_SINT;
  case Format::RGBA32Sfloat: return VK_FORMAT_R32G32B32A32_SFLOAT;
  case Format::R64Uint: return VK_FORMAT_R64_UINT;
  case Format::R64Sint: return VK_FORMAT_R64_SINT;
  case Format::R64Sfloat: return VK_FORMAT_R64_SFLOAT;
  case Format::RG64Uint: return VK_FORMAT_R64G64_UINT;
  case Format::RG64Sint: return VK_FORMAT_R64G64_SINT;
  case Format::RG64Sfloat: return VK_FORMAT_R64G64_SFLOAT;
  case Format::RGB64Uint: return VK_FORMAT_R64G64B64_UINT;
  case Format::RGB64Sint: return VK_FORMAT_R64G64B64_SINT;
  case Format::RGB64Sfloat: return VK_FORMAT_R64G64B64_SFLOAT;
  case Format::RGBA64Uint: return VK_FORMAT_R64G64B64A64_UINT;
  case Format::RGBA64Sint: return VK_FORMAT_R64G64B64A64_SINT;
  case Format::RGBA64Sfloat: return VK_FORMAT_R64G64B64A64_SFLOAT;
  case Format::B10GR11UfloatPack32: return VK_FORMAT_B10G11R11_UFLOAT_PACK32;
  case Format::E5BGR9UfloatPack32: return VK_FORMAT_E5B9G9R9_UFLOAT_PACK32;
  case Format::D16Unorm: return VK_FORMAT_D16_UNORM;
  case Format::X8D24UnormPack32: return VK_FORMAT_X8_D24_UNORM_PACK32;
  case Format::D32Sfloat: return VK_FORMAT_D32_SFLOAT;
  case Format::S8Uint: return VK_FORMAT_S8_UINT;
  case Format::D16UnormS8Uint: return VK_FORMAT_D16_UNORM_S8_UINT;
  case Format::D24UnormS8Uint: return VK_FORMAT_D24_UNORM_S8_UINT;
  case Format::D32SfloatS8Uint: return VK_FORMAT_D32_SFLOAT_S8_UINT;
  }

  throw std::runtime_error("Unreachable");
}

Format format(VkFormat vkFormat) {
  switch (vkFormat) {
  case VK_FORMAT_UNDEFINED: return Format::Undefined;
  case VK_FORMAT_R4G4_UNORM_PACK8: return Format::RG4UnormPack8;
  case VK_FORMAT_R4G4B4A4_UNORM_PACK16: return Format::RGBA4UnormPack16;
  case VK_FORMAT_B4G4R4A4_UNORM_PACK16: return Format::BGRA4UnormPack16;
  case VK_FORMAT_R5G6B5_UNORM_PACK16: return Format::R5G6B5UnormPack16;
  case VK_FORMAT_B5G6R5_UNORM_PACK16: return Format::B5G6R5UnormPack16;
  case VK_FORMAT_R5G5B5A1_UNORM_PACK16: return Format::RGB5A1UnormPack16;
  case VK_FORMAT_B5G5R5A1_UNORM_PACK16: return Format::BGR5A1UnormPack16;
  case VK_FORMAT_A1R5G5B5_UNORM_PACK16: return Format::A1RGB5UnormPack16;
  case VK_FORMAT_R8_UNORM: return Format::R8Unorm;
  case VK_FORMAT_R8_SNORM: return Format::R8Snorm;
  case VK_FORMAT_R8_USCALED: return Format::R8Uscaled;
  case VK_FORMAT_R8_SSCALED: return Format::R8Sscaled;
  case VK_FORMAT_R8_UINT: return Format::R8Uint;
  case VK_FORMAT_R8_SINT: return Format::R8Sint;
  case VK_FORMAT_R8_SRGB: return Format::R8Srgb;
  case VK_FORMAT_R8G8_UNORM: return Format::RG8Unorm;
  case VK_FORMAT_R8G8_SNORM: return Format::RG8Snorm;
  case VK_FORMAT_R8G8_USCALED: return Format::RG8Uscaled;
  case VK_FORMAT_R8G8_SSCALED: return Format::RG8Sscaled;
  case VK_FORMAT_R8G8_UINT: return Format::RG8Uint;
  case VK_FORMAT_R8G8_SINT: return Format::RG8Sint;
  case VK_FORMAT_R8G8_SRGB: return Format::RG8Srgb;
  case VK_FORMAT_R8G8B8_UNORM: return Format::RGB8Unorm;
  case VK_FORMAT_R8G8B8_SNORM: return Format::RGB8Snorm;
  case VK_FORMAT_R8G8B8_USCALED: return Format::RGB8Uscaled;
  case VK_FORMAT_R8G8B8_SSCALED: return Format::RGB8Sscaled;
  case VK_FORMAT_R8G8B8_UINT: return Format::RGB8Uint;
  case VK_FORMAT_R8G8B8_SINT: return Format::RGB8Sint;
  case VK_FORMAT_R8G8B8_SRGB: return Format::RGB8Srgb;
  case VK_FORMAT_B8G8R8_UNORM: return Format::BGR8Unorm;
  case VK_FORMAT_B8G8R8_SNORM: return Format::BGR8Snorm;
  case VK_FORMAT_B8G8R8_USCALED: return Format::BGR8Uscaled;
  case VK_FORMAT_B8G8R8_SSCALED: return Format::BGR8Sscaled;
  case VK_FORMAT_B8G8R8_UINT: return Format::BGR8Uint;
  case VK_FORMAT_B8G8R8_SINT: return Format::BGR8Sint;
  case VK_FORMAT_B8G8R8_SRGB: return Format::BGR8Srgb;
  case VK_FORMAT_R8G8B8A8_UNORM: return Format::RGBA8Unorm;
  case VK_FORMAT_R8G8B8A8_SNORM: return Format::RGBA8Snorm;
  case VK_FORMAT_R8G8B8A8_USCALED: return Format::RGBA8Uscaled;
  case VK_FORMAT_R8G8B8A8_SSCALED: return Format::RGBA8Sscaled;
  case VK_FORMAT_R8G8B8A8_UINT: return Format::RGBA8Uint;
  case VK_FORMAT_R8G8B8A8_SINT: return Format::RGBA8Sint;
  case VK_FORMAT_R8G8B8A8_SRGB: return Format::RGBA8Srgb;
  case VK_FORMAT_B8G8R8A8_UNORM: return Format::BGRA8Unorm;
  case VK_FORMAT_B8G8R8A8_SNORM: return Format::BGRA8Snorm;
  case VK_FORMAT_B8G8R8A8_USCALED: return Format::BGRA8Uscaled;
  case VK_FORMAT_B8G8R8A8_SSCALED: return Format::BGRA8Sscaled;
  case VK_FORMAT_B8G8R8A8_UINT: return Format::BGRA8Uint;
  case VK_FORMAT_B8G8R8A8_SINT: return Format::BGRA8Sint;
  case VK_FORMAT_B8G8R8A8_SRGB: return Format::BGRA8Srgb;
  case VK_FORMAT_A8B8G8R8_UNORM_PACK32: return Format::ABGR8UnormPack32;
  case VK_FORMAT_A8B8G8R8_SNORM_PACK32: return Format::ABGR8SnormPack32;
  case VK_FORMAT_A8B8G8R8_USCALED_PACK32: return Format::ABGR8UscaledPack32;
  case VK_FORMAT_A8B8G8R8_SSCALED_PACK32: return Format::ABGR8SscaledPack32;
  case VK_FORMAT_A8B8G8R8_UINT_PACK32: return Format::ABGR8UintPack32;
  case VK_FORMAT_A8B8G8R8_SINT_PACK32: return Format::ABGR8SintPack32;
  case VK_FORMAT_A8B8G8R8_SRGB_PACK32: return Format::ABGR8SrgbPack32;
  case VK_FORMAT_A2R10G10B10_UNORM_PACK32: return Format::A2RGB10UnormPack32;
  case VK_FORMAT_A2R10G10B10_SNORM_PACK32: return Format::A2RGB10SnormPack32;
  case VK_FORMAT_A2R10G10B10_USCALED_PACK32: return Format::A2RGB10UscaledPack32;
  case VK_FORMAT_A2R10G10B10_SSCALED_PACK32: return Format::A2RGB10SscaledPack32;
  case VK_FORMAT_A2R10G10B10_UINT_PACK32: return Format::A2RGB10UintPack32;
  case VK_FORMAT_A2R10G10B10_SINT_PACK32: return Format::A2RGB10SintPack32;
  case VK_FORMAT_A2B10G10R10_UNORM_PACK32: return Format::A2BGR10UnormPack32;
  case VK_FORMAT_A2B10G10R10_SNORM_PACK32: return Format::A2BGR10SnormPack32;
  case VK_FORMAT_A2B10G10R10_USCALED_PACK32: return Format::A2BGR10UscaledPack32;
  case VK_FORMAT_A2B10G10R10_SSCALED_PACK32: return Format::A2BGR10SscaledPack32;
  case VK_FORMAT_A2B10G10R10_UINT_PACK32: return Format::A2BGR10UintPack32;
  case VK_FORMAT_A2B10G10R10_SINT_PACK32: return Format::A2BGR10SintPack32;
  case VK_FORMAT_R16_UNORM: return Format::R16Unorm;
  case VK_FORMAT_R16_SNORM: return Format::R16Snorm;
  case VK_FORMAT_R16_USCALED: return Format::R16Uscaled;
  case VK_FORMAT_R16_SSCALED: return Format::R16Sscaled;
  case VK_FORMAT_R16_UINT: return Format::R16Uint;
  case VK_FORMAT_R16_SINT: return Format::R16Sint;
  case VK_FORMAT_R16_SFLOAT: return Format::R16Sfloat;
  case VK_FORMAT_R16G16_UNORM: return Format::RG16Unorm;
  case VK_FORMAT_R16G16_SNORM: return Format::RG16Snorm;
  case VK_FORMAT_R16G16_USCALED: return Format::RG16Uscaled;
  case VK_FORMAT_R16G16_SSCALED: return Format::RG16Sscaled;
  case VK_FORMAT_R16G16_UINT: return Format::RG16Uint;
  case VK_FORMAT_R16G16_SINT: return Format::RG16Sint;
  case VK_FORMAT_R16G16_SFLOAT: return Format::RG16Sfloat;
  case VK_FORMAT_R16G16B16_UNORM: return Format::RGB16Unorm;
  case VK_FORMAT_R16G16B16_SNORM: return Format::RGB16Snorm;
  case VK_FORMAT_R16G16B16_USCALED: return Format::RGB16Uscaled;
  case VK_FORMAT_R16G16B16_SSCALED: return Format::RGB16Sscaled;
  case VK_FORMAT_R16G16B16_UINT: return Format::RGB16Uint;
  case VK_FORMAT_R16G16B16_SINT: return Format::RGB16Sint;
  case VK_FORMAT_R16G16B16_SFLOAT: return Format::RGB16Sfloat;
  case VK_FORMAT_R16G16B16A16_UNORM: return Format::RGBA16Unorm;
  case VK_FORMAT_R16G16B16A16_SNORM: return Format::RGBA16Snorm;
  case VK_FORMAT_R16G16B16A16_USCALED: return Format::RGBA16Uscaled;
  case VK_FORMAT_R16G16B16A16_SSCALED: return Format::RGBA16Sscaled;
  case VK_FORMAT_R16G16B16A16_UINT: return Format::RGBA16Uint;
  case VK_FORMAT_R16G16B16A16_SINT: return Format::RGBA16Sint;
  case VK_FORMAT_R16G16B16A16_SFLOAT: return Format::RGBA16Sfloat;
  case VK_FORMAT_R32_UINT: return Format::R32Uint;
  case VK_FORMAT_R32_SINT: return Format::R32Sint;
  case VK_FORMAT_R32_SFLOAT: return Format::R32Sfloat;
  case VK_FORMAT_R32G32_UINT: return Format::RG32Uint;
  case VK_FORMAT_R32G32_SINT: return Format::RG32Sint;
  case VK_FORMAT_R32G32_SFLOAT: return Format::RG32Sfloat;
  case VK_FORMAT_R32G32B32_UINT: return Format::RGB32Uint;
  case VK_FORMAT_R32G32B32_SINT: return Format::RGB32Sint;
  case VK_FORMAT_R32G32B32_SFLOAT: return Format::RGB32Sfloat;
  case VK_FORMAT_R32G32B32A32_UINT: return Format::RGBA32Uint;
  case VK_FORMAT_R32G32B32A32_SINT: return Format::RGBA32Sint;
  case VK_FORMAT_R32G32B32A32_SFLOAT: return Format::RGBA32Sfloat;
  case VK_FORMAT_R64_UINT: return Format::R64Uint;
  case VK_FORMAT_R64_SINT: return Format::R64Sint;
  case VK_FORMAT_R64_SFLOAT: return Format::R64Sfloat;
  case VK_FORMAT_R64G64_UINT: return Format::RG64Uint;
  case VK_FORMAT_R64G64_SINT: return Format::RG64Sint;
  case VK_FORMAT_R64G64_SFLOAT: return Format::RG64Sfloat;
  case VK_FORMAT_R64G64B64_UINT: return Format::RGB64Uint;
  case VK_FORMAT_R64G64B64_SINT: return Format::RGB64Sint;
  case VK_FORMAT_R64G64B64_SFLOAT: return Format::RGB64Sfloat;
  case VK_FORMAT_R64G64B64A64_UINT: return Format::RGBA64Uint;
  case VK_FORMAT_R64G64B64A64_SINT: return Format::RGBA64Sint;
  case VK_FORMAT_R64G64B64A64_SFLOAT: return Format::RGBA64Sfloat;
  case VK_FORMAT_B10G11R11_UFLOAT_PACK32: return Format::B10GR11UfloatPack32;
  case VK_FORMAT_E5B9G9R9_UFLOAT_PACK32: return Format::E5BGR9UfloatPack32;
  case VK_FORMAT_D16_UNORM: return Format::D16Unorm;
  case VK_FORMAT_X8_D24_UNORM_PACK32: return Format::X8D24UnormPack32;
  case VK_FORMAT_D32_SFLOAT: return Format::D32Sfloat;
  case VK_FORMAT_S8_UINT: return Format::S8Uint;
  case VK_FORMAT_D16_UNORM_S8_UINT: return Format::D16UnormS8Uint;
  case VK_FORMAT_D24_UNORM_S8_UINT: return Format::D24UnormS8Uint;
  case VK_FORMAT_D32_SFLOAT_S8_UINT: return Format::D32SfloatS8Uint;
  default: {
    throw std::runtime_error("No conversion");
  }
  }
}

} // namespace purrr::vulkan